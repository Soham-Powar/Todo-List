{"version":3,"file":"main.js","mappings":"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","sources":["webpack://todo-list/./src/dom/dom.css","webpack://todo-list/./src/styles.css","webpack://todo-list/./node_modules/css-loader/dist/runtime/api.js","webpack://todo-list/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://todo-list/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://todo-list/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://todo-list/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://todo-list/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://todo-list/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://todo-list/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://todo-list/webpack/bootstrap","webpack://todo-list/webpack/runtime/compat get default export","webpack://todo-list/webpack/runtime/define property getters","webpack://todo-list/webpack/runtime/hasOwnProperty shorthand","webpack://todo-list/webpack/runtime/nonce","webpack://todo-list/./src/styles.css?44b2","webpack://todo-list/./src/modules/createProject.js","webpack://todo-list/./src/modules/createTodo.js","webpack://todo-list/./node_modules/date-fns/locale/en-US/_lib/formatDistance.js","webpack://todo-list/./node_modules/date-fns/locale/_lib/buildFormatLongFn.js","webpack://todo-list/./node_modules/date-fns/locale/en-US/_lib/formatLong.js","webpack://todo-list/./node_modules/date-fns/locale/en-US/_lib/formatRelative.js","webpack://todo-list/./node_modules/date-fns/locale/_lib/buildLocalizeFn.js","webpack://todo-list/./node_modules/date-fns/locale/en-US/_lib/localize.js","webpack://todo-list/./node_modules/date-fns/locale/_lib/buildMatchFn.js","webpack://todo-list/./node_modules/date-fns/locale/en-US/_lib/match.js","webpack://todo-list/./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js","webpack://todo-list/./node_modules/date-fns/locale/en-US.js","webpack://todo-list/./node_modules/date-fns/_lib/defaultOptions.js","webpack://todo-list/./node_modules/date-fns/constants.js","webpack://todo-list/./node_modules/date-fns/constructFrom.js","webpack://todo-list/./node_modules/date-fns/toDate.js","webpack://todo-list/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js","webpack://todo-list/./node_modules/date-fns/startOfDay.js","webpack://todo-list/./node_modules/date-fns/getDayOfYear.js","webpack://todo-list/./node_modules/date-fns/differenceInCalendarDays.js","webpack://todo-list/./node_modules/date-fns/_lib/normalizeDates.js","webpack://todo-list/./node_modules/date-fns/startOfYear.js","webpack://todo-list/./node_modules/date-fns/startOfWeek.js","webpack://todo-list/./node_modules/date-fns/startOfISOWeek.js","webpack://todo-list/./node_modules/date-fns/getISOWeekYear.js","webpack://todo-list/./node_modules/date-fns/getISOWeek.js","webpack://todo-list/./node_modules/date-fns/startOfISOWeekYear.js","webpack://todo-list/./node_modules/date-fns/getWeekYear.js","webpack://todo-list/./node_modules/date-fns/getWeek.js","webpack://todo-list/./node_modules/date-fns/startOfWeekYear.js","webpack://todo-list/./node_modules/date-fns/_lib/addLeadingZeros.js","webpack://todo-list/./node_modules/date-fns/_lib/format/lightFormatters.js","webpack://todo-list/./node_modules/date-fns/_lib/format/formatters.js","webpack://todo-list/./node_modules/date-fns/_lib/format/longFormatters.js","webpack://todo-list/./node_modules/date-fns/_lib/protectedTokens.js","webpack://todo-list/./node_modules/date-fns/isValid.js","webpack://todo-list/./node_modules/date-fns/isDate.js","webpack://todo-list/./node_modules/date-fns/format.js","webpack://todo-list/./src/dom/dom.css?9b6a","webpack://todo-list/./src/modules/getActiveProject.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/Setter.js","webpack://todo-list/./node_modules/date-fns/transpose.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/Parser.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/constants.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/utils.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/parsers/DateParser.js","webpack://todo-list/./node_modules/date-fns/addDays.js","webpack://todo-list/./node_modules/date-fns/setDay.js","webpack://todo-list/./node_modules/date-fns/setISODay.js","webpack://todo-list/./node_modules/date-fns/getISODay.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/parsers.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/parsers/EraParser.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/parsers/YearParser.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/parsers/LocalWeekYearParser.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/parsers/ISOWeekYearParser.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/parsers/ExtendedYearParser.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/parsers/QuarterParser.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/parsers/StandAloneQuarterParser.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/parsers/MonthParser.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/parsers/StandAloneMonthParser.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/parsers/LocalWeekParser.js","webpack://todo-list/./node_modules/date-fns/setWeek.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/parsers/ISOWeekParser.js","webpack://todo-list/./node_modules/date-fns/setISOWeek.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/parsers/DayOfYearParser.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/parsers/DayParser.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/parsers/LocalDayParser.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/parsers/StandAloneLocalDayParser.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/parsers/ISODayParser.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/parsers/AMPMParser.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/parsers/AMPMMidnightParser.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/parsers/DayPeriodParser.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/parsers/Hour1to12Parser.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/parsers/Hour0to23Parser.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/parsers/Hour0To11Parser.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/parsers/Hour1To24Parser.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/parsers/MinuteParser.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/parsers/SecondParser.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/parsers/FractionOfSecondParser.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/parsers/ISOTimezoneWithZParser.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/parsers/ISOTimezoneParser.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/parsers/TimestampSecondsParser.js","webpack://todo-list/./node_modules/date-fns/parse/_lib/parsers/TimestampMillisecondsParser.js","webpack://todo-list/./node_modules/date-fns/parse.js","webpack://todo-list/./node_modules/date-fns/getDefaultOptions.js","webpack://todo-list/./src/modules/editTodoHandler.js","webpack://todo-list/./src/dom/mainContainer.js","webpack://todo-list/./src/dom/todoDescriptionToggle.js","webpack://todo-list/./src/dom/setPriorityStyle.js","webpack://todo-list/./src/modules/updateLocalStorage.js","webpack://todo-list/./src/modules/todoManager.js","webpack://todo-list/./node_modules/date-fns/parseISO.js","webpack://todo-list/./src/modules/addTodoToProject.js","webpack://todo-list/./src/modules/projectClickHandler.js","webpack://todo-list/./src/dom/renderNewProjects.js","webpack://todo-list/./src/dom/footer.js","webpack://todo-list/./src/dom/header.js","webpack://todo-list/./src/dom/menu.js","webpack://todo-list/./src/index.js","webpack://todo-list/./src/modules/initProjects.js","webpack://todo-list/./src/modules/projectDialogHandler.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `footer {\n\ttext-align: center;\n}\n\nheader {\n\theight: 10vh;\n\tfont-size: 2rem;\n\tpadding-left: 25px;\n\tdisplay: flex;\n\talign-items: center;\n\tcolor: #a81f00;\n\tborder-bottom: thin #E0E0E0 solid;\n}\n\n.menu {\n\tbackground-color: #ffefe550;\n}\n\n.default-menu {\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 5px;\n\tfont-size: large;\n}\n\n.todo-holder {\n\tpadding: 5px 15px;\n\tdisplay: flex;\n\tjustify-content: space-between;\n}\n\n.todo-holder:hover {\n\tbackground-color: #F1F9FF;\n}\n\n.projects-menu>div:first-of-type {\n\tcolor: #a81f00;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tpadding: 5px 15px;\n\tfont-size: 24px;\n}\n\n.projects-menu div:first-of-type>button {\n\tbackground-color: transparent;\n\tcolor: #a81f00;\n\tborder: none;\n}\n\n.main-container {\n\tcolor: white;\n}\n\nform {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.main-container {\n\tpadding: 20px;\n}\n\n.head {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tpadding: 10px;\n}\n\n.head>h3 {\n\tfont-size: 2rem;\n\tcolor: #a81f00;\n}\n\n.head>button {\n\tbackground-color: #a81f00;\n\tcolor: #FFFFFF;\n\tfont-size: 18px;\n\tfont-weight: bold;\n\tborder: none;\n\tpadding: 12px 20px;\n\tborder-radius: 50%;\n\tcursor: pointer;\n\ttransition: background-color 0.3s ease;\n}\n\n.head>button:hover {\n\tbackground-color: #831901;\n}\n\n.todo {\n\tbackground-color: #f9f9f9;\n\tcolor: #333333;\n\tborder: #ffefe550 2px solid;\n\tborder-radius: 4px;\n\tbox-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n\ttransition: box-shadow 0.3s ease;\n\tdisplay: grid;\n\tgrid-template-columns: 20px 1fr 100px 40px 40px 40px;\n\tgap: 15px;\n\tpadding: 15px;\n}\n\n.todo:hover {\n\tbox-shadow: 0 2px 8px #9c8b8162;\n}\n\n.todo-container {\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 20px;\n\tgap: 15px;\n}\n\n.todo>button {\n\tcolor: rgba(255, 0, 0, 0.527);\n\tfont-weight: bold;\n\tborder: none;\n\tbackground: transparent;\n}\n\n.todo>button:hover {\n\tcolor: rgba(255, 0, 0, 0.753);\n}\n\n.todo-due-title {\n\tfont-style: italic;\n\tcolor: #666666;\n}\n\n.priority-high {\n\tborder-left: 2px solid red;\n}\n\n.priority-medium {\n\tborder-left: 2px solid rgb(179, 179, 10);\n}\n\n.priority-low {\n\tborder-left: 2px solid green;\n}\n\n.todo-description {\n\tgrid-column: 1 / -1;\n}\n\n.hidden-description {\n\tdisplay: none;\n}\n\ndialog {\n\tmargin: auto;\n\tborder: none;\n\tbackground-color: #FFFAF7;\n\tborder: 2px solid #a81f00;\n\tborder-radius: 15px;\n}\n\n::backdrop {\n\tbackdrop-filter: blur(5px);\n}\n\nform>input {\n\tborder: none;\n\theight: 30px;\n\tpadding: 3px 5px;\n}\n\nform>button {\n\tbackground-color: #a81f00;\n\tborder: none;\n\tpadding: 5px;\n\tmargin-top: 10px;\n\tborder-radius: 15px;\n\tcolor: white;\n}\n\n.remove-project-btn:hover {\n\tcolor: #831901;\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/dom/dom.css\"],\"names\":[],\"mappings\":\"AAAA;CACC,kBAAkB;AACnB;;AAEA;CACC,YAAY;CACZ,eAAe;CACf,kBAAkB;CAClB,aAAa;CACb,mBAAmB;CACnB,cAAc;CACd,iCAAiC;AAClC;;AAEA;CACC,2BAA2B;AAC5B;;AAEA;CACC,aAAa;CACb,sBAAsB;CACtB,QAAQ;CACR,gBAAgB;AACjB;;AAEA;CACC,iBAAiB;CACjB,aAAa;CACb,8BAA8B;AAC/B;;AAEA;CACC,yBAAyB;AAC1B;;AAEA;CACC,cAAc;CACd,aAAa;CACb,8BAA8B;CAC9B,iBAAiB;CACjB,eAAe;AAChB;;AAEA;CACC,6BAA6B;CAC7B,cAAc;CACd,YAAY;AACb;;AAEA;CACC,YAAY;AACb;;AAEA;CACC,aAAa;CACb,sBAAsB;AACvB;;AAEA;CACC,aAAa;AACd;;AAEA;CACC,aAAa;CACb,8BAA8B;CAC9B,aAAa;AACd;;AAEA;CACC,eAAe;CACf,cAAc;AACf;;AAEA;CACC,yBAAyB;CACzB,cAAc;CACd,eAAe;CACf,iBAAiB;CACjB,YAAY;CACZ,kBAAkB;CAClB,kBAAkB;CAClB,eAAe;CACf,sCAAsC;AACvC;;AAEA;CACC,yBAAyB;AAC1B;;AAEA;CACC,yBAAyB;CACzB,cAAc;CACd,2BAA2B;CAC3B,kBAAkB;CAClB,yCAAyC;CACzC,gCAAgC;CAChC,aAAa;CACb,oDAAoD;CACpD,SAAS;CACT,aAAa;AACd;;AAEA;CACC,+BAA+B;AAChC;;AAEA;CACC,aAAa;CACb,sBAAsB;CACtB,aAAa;CACb,SAAS;AACV;;AAEA;CACC,6BAA6B;CAC7B,iBAAiB;CACjB,YAAY;CACZ,uBAAuB;AACxB;;AAEA;CACC,6BAA6B;AAC9B;;AAEA;CACC,kBAAkB;CAClB,cAAc;AACf;;AAEA;CACC,0BAA0B;AAC3B;;AAEA;CACC,wCAAwC;AACzC;;AAEA;CACC,4BAA4B;AAC7B;;AAEA;CACC,mBAAmB;AACpB;;AAEA;CACC,aAAa;AACd;;AAEA;CACC,YAAY;CACZ,YAAY;CACZ,yBAAyB;CACzB,yBAAyB;CACzB,mBAAmB;AACpB;;AAEA;CACC,0BAA0B;AAC3B;;AAEA;CACC,YAAY;CACZ,YAAY;CACZ,gBAAgB;AACjB;;AAEA;CACC,yBAAyB;CACzB,YAAY;CACZ,YAAY;CACZ,gBAAgB;CAChB,mBAAmB;CACnB,YAAY;AACb;;AAEA;CACC,cAAc;AACf\",\"sourcesContent\":[\"footer {\\n\\ttext-align: center;\\n}\\n\\nheader {\\n\\theight: 10vh;\\n\\tfont-size: 2rem;\\n\\tpadding-left: 25px;\\n\\tdisplay: flex;\\n\\talign-items: center;\\n\\tcolor: #a81f00;\\n\\tborder-bottom: thin #E0E0E0 solid;\\n}\\n\\n.menu {\\n\\tbackground-color: #ffefe550;\\n}\\n\\n.default-menu {\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n\\tgap: 5px;\\n\\tfont-size: large;\\n}\\n\\n.todo-holder {\\n\\tpadding: 5px 15px;\\n\\tdisplay: flex;\\n\\tjustify-content: space-between;\\n}\\n\\n.todo-holder:hover {\\n\\tbackground-color: #F1F9FF;\\n}\\n\\n.projects-menu>div:first-of-type {\\n\\tcolor: #a81f00;\\n\\tdisplay: flex;\\n\\tjustify-content: space-between;\\n\\tpadding: 5px 15px;\\n\\tfont-size: 24px;\\n}\\n\\n.projects-menu div:first-of-type>button {\\n\\tbackground-color: transparent;\\n\\tcolor: #a81f00;\\n\\tborder: none;\\n}\\n\\n.main-container {\\n\\tcolor: white;\\n}\\n\\nform {\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n}\\n\\n.main-container {\\n\\tpadding: 20px;\\n}\\n\\n.head {\\n\\tdisplay: flex;\\n\\tjustify-content: space-between;\\n\\tpadding: 10px;\\n}\\n\\n.head>h3 {\\n\\tfont-size: 2rem;\\n\\tcolor: #a81f00;\\n}\\n\\n.head>button {\\n\\tbackground-color: #a81f00;\\n\\tcolor: #FFFFFF;\\n\\tfont-size: 18px;\\n\\tfont-weight: bold;\\n\\tborder: none;\\n\\tpadding: 12px 20px;\\n\\tborder-radius: 50%;\\n\\tcursor: pointer;\\n\\ttransition: background-color 0.3s ease;\\n}\\n\\n.head>button:hover {\\n\\tbackground-color: #831901;\\n}\\n\\n.todo {\\n\\tbackground-color: #f9f9f9;\\n\\tcolor: #333333;\\n\\tborder: #ffefe550 2px solid;\\n\\tborder-radius: 4px;\\n\\tbox-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\\n\\ttransition: box-shadow 0.3s ease;\\n\\tdisplay: grid;\\n\\tgrid-template-columns: 20px 1fr 100px 40px 40px 40px;\\n\\tgap: 15px;\\n\\tpadding: 15px;\\n}\\n\\n.todo:hover {\\n\\tbox-shadow: 0 2px 8px #9c8b8162;\\n}\\n\\n.todo-container {\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n\\tpadding: 20px;\\n\\tgap: 15px;\\n}\\n\\n.todo>button {\\n\\tcolor: rgba(255, 0, 0, 0.527);\\n\\tfont-weight: bold;\\n\\tborder: none;\\n\\tbackground: transparent;\\n}\\n\\n.todo>button:hover {\\n\\tcolor: rgba(255, 0, 0, 0.753);\\n}\\n\\n.todo-due-title {\\n\\tfont-style: italic;\\n\\tcolor: #666666;\\n}\\n\\n.priority-high {\\n\\tborder-left: 2px solid red;\\n}\\n\\n.priority-medium {\\n\\tborder-left: 2px solid rgb(179, 179, 10);\\n}\\n\\n.priority-low {\\n\\tborder-left: 2px solid green;\\n}\\n\\n.todo-description {\\n\\tgrid-column: 1 / -1;\\n}\\n\\n.hidden-description {\\n\\tdisplay: none;\\n}\\n\\ndialog {\\n\\tmargin: auto;\\n\\tborder: none;\\n\\tbackground-color: #FFFAF7;\\n\\tborder: 2px solid #a81f00;\\n\\tborder-radius: 15px;\\n}\\n\\n::backdrop {\\n\\tbackdrop-filter: blur(5px);\\n}\\n\\nform>input {\\n\\tborder: none;\\n\\theight: 30px;\\n\\tpadding: 3px 5px;\\n}\\n\\nform>button {\\n\\tbackground-color: #a81f00;\\n\\tborder: none;\\n\\tpadding: 5px;\\n\\tmargin-top: 10px;\\n\\tborder-radius: 15px;\\n\\tcolor: white;\\n}\\n\\n.remove-project-btn:hover {\\n\\tcolor: #831901;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* CSS RESET */\n/* 1. Use a more-intuitive box-sizing model */\n*,\n*::before,\n*::after {\n\tbox-sizing: border-box;\n}\n\n/* 2. Remove default margin */\n* {\n\tmargin: 0;\n\tfont-family: 'roboto';\n}\n\nbody {\n\t/* 3. Add accessible line-height */\n\tline-height: 1.5;\n\t/* 4. Improve text rendering */\n\t-webkit-font-smoothing: antialiased;\n}\n\n/* 5. Improve media defaults */\nimg,\npicture,\nvideo,\ncanvas,\nsvg {\n\tdisplay: block;\n\tmax-width: 100%;\n}\n\n/* 6. Inherit fonts for form controls */\ninput,\nbutton,\ntextarea,\nselect {\n\tfont: inherit;\n}\n\n/* 7. Avoid text overflows */\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n\toverflow-wrap: break-word;\n}\n\n/* 8. Improve line wrapping */\np {\n\ttext-wrap: pretty;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n\ttext-wrap: balance;\n}\n\n/*\n  9. Create a root stacking context\n*/\n#root,\n#__next {\n\tisolation: isolate;\n}\n\n/*****/\n/* PROJECT CSS */\n/*****/\n\n.container {\n\tdisplay: grid;\n\tgrid-template-columns: 1fr 5fr;\n\theight: 90vh;\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles.css\"],\"names\":[],\"mappings\":\"AAAA,cAAc;AACd,6CAA6C;AAC7C;;;CAGC,sBAAsB;AACvB;;AAEA,6BAA6B;AAC7B;CACC,SAAS;CACT,qBAAqB;AACtB;;AAEA;CACC,kCAAkC;CAClC,gBAAgB;CAChB,8BAA8B;CAC9B,mCAAmC;AACpC;;AAEA,8BAA8B;AAC9B;;;;;CAKC,cAAc;CACd,eAAe;AAChB;;AAEA,uCAAuC;AACvC;;;;CAIC,aAAa;AACd;;AAEA,4BAA4B;AAC5B;;;;;;;CAOC,yBAAyB;AAC1B;;AAEA,6BAA6B;AAC7B;CACC,iBAAiB;AAClB;;AAEA;;;;;;CAMC,kBAAkB;AACnB;;AAEA;;CAEC;AACD;;CAEC,kBAAkB;AACnB;;AAEA,MAAM;AACN,gBAAgB;AAChB,MAAM;;AAEN;CACC,aAAa;CACb,8BAA8B;CAC9B,YAAY;AACb\",\"sourcesContent\":[\"/* CSS RESET */\\n/* 1. Use a more-intuitive box-sizing model */\\n*,\\n*::before,\\n*::after {\\n\\tbox-sizing: border-box;\\n}\\n\\n/* 2. Remove default margin */\\n* {\\n\\tmargin: 0;\\n\\tfont-family: 'roboto';\\n}\\n\\nbody {\\n\\t/* 3. Add accessible line-height */\\n\\tline-height: 1.5;\\n\\t/* 4. Improve text rendering */\\n\\t-webkit-font-smoothing: antialiased;\\n}\\n\\n/* 5. Improve media defaults */\\nimg,\\npicture,\\nvideo,\\ncanvas,\\nsvg {\\n\\tdisplay: block;\\n\\tmax-width: 100%;\\n}\\n\\n/* 6. Inherit fonts for form controls */\\ninput,\\nbutton,\\ntextarea,\\nselect {\\n\\tfont: inherit;\\n}\\n\\n/* 7. Avoid text overflows */\\np,\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6 {\\n\\toverflow-wrap: break-word;\\n}\\n\\n/* 8. Improve line wrapping */\\np {\\n\\ttext-wrap: pretty;\\n}\\n\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6 {\\n\\ttext-wrap: balance;\\n}\\n\\n/*\\n  9. Create a root stacking context\\n*/\\n#root,\\n#__next {\\n\\tisolation: isolate;\\n}\\n\\n/*****/\\n/* PROJECT CSS */\\n/*****/\\n\\n.container {\\n\\tdisplay: grid;\\n\\tgrid-template-columns: 1fr 5fr;\\n\\theight: 90vh;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.nc = undefined;","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./styles.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./styles.css\";\n       export default content && content.locals ? content.locals : undefined;\n","export default class project {\n\tconstructor(title) {\n\t\tthis.title = title;\n\t\tthis.projectTodos = [];\n\t\tthis.active = false;\n\t}\n\n\taddTodo(todo) {\n\t\tthis.projectTodos.push(todo);\n\t}\n\n    delete(todoTitle) {\n        const indexOfTodo = this.projectTodos.findIndex(todo => todo.title === todoTitle);\n        if (indexOfTodo !== -1) {\n            this.projectTodos.splice(indexOfTodo, 1); // Remove the todo by title\n        }\n    }\n};","export default class todos {\n\tconstructor(title, description, dueDate, priority, taskDone) {\n\t\tthis.title = title;\n\t\tthis.description = description;\n\t\tthis.dueDate = dueDate;\n\t\tthis.priority = priority;\n\t\tthis.taskDone = taskDone;\n\t}\n\n\ttoggleTaskDone() {\n\t\tthis.taskDone = !(this.taskDone);\n\t}\n};","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfDay} function options.\n */\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\nimport { startOfYear } from \"./startOfYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDayOfYear} function options.\n */\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { millisecondsInDay } from \"./constants.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link differenceInCalendarDays} function options.\n */\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options object\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const laterStartOfDay = startOfDay(laterDate_);\n  const earlierStartOfDay = startOfDay(earlierDate_);\n\n  const laterTimestamp =\n    +laterStartOfDay - getTimezoneOffsetInMilliseconds(laterStartOfDay);\n  const earlierTimestamp =\n    +earlierStartOfDay - getTimezoneOffsetInMilliseconds(earlierStartOfDay);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { constructFrom } from \"../constructFrom.js\";\n\nexport function normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfYear} function options.\n */\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date, options) {\n  const date_ = toDate(date, options?.in);\n  date_.setFullYear(date_.getFullYear(), 0, 1);\n  date_.setHours(0, 0, 0, 0);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfISOWeek} function options.\n */\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date, options) {\n  return startOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeekYear} function options.\n */\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeek} function options.\n */\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { getISOWeekYear } from \"./getISOWeekYear.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\n\n/**\n * The {@link startOfISOWeekYear} function options.\n */\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date, options) {\n  const year = getISOWeekYear(date, options);\n  const fourthOfJanuary = constructFrom(options?.in || date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(options?.in || date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(options?.in || date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (+_date >= +startOfNextYear) {\n    return year + 1;\n  } else if (+_date >= +startOfThisYear) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { startOfWeekYear } from \"./startOfWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\nexport function getWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getWeekYear } from \"./getWeekYear.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(options?.in || date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.js\";\nimport { getISOWeek } from \"../../getISOWeek.js\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.js\";\nimport { getWeek } from \"../../getWeek.js\";\nimport { getWeekYear } from \"../../getWeekYear.js\";\n\nimport { addLeadingZeros } from \"../addLeadingZeros.js\";\nimport { lightFormatters } from \"./lightFormatters.js\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(+date / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    return addLeadingZeros(+date, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { isDate } from \"./isDate.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertible into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  return !((!isDate(date) && typeof date !== \"number\") || isNaN(+toDate(date)));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { formatters } from \"./_lib/format/formatters.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.js\";\nimport { isValid } from \"./isValid.js\";\nimport { toDate } from \"./toDate.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date, options?.in);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./dom.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./dom.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import allProjectsArray from \"../index\";\n\nexport default function getActiveProject() {\n\treturn allProjectsArray.find(project => project.active === true);\n}","import { constructFrom } from \"../../constructFrom.js\";\nimport { transpose } from \"../../transpose.js\";\n\nconst TIMEZONE_UNIT_PRIORITY = 10;\n\nexport class Setter {\n  subPriority = 0;\n\n  validate(_utcDate, _options) {\n    return true;\n  }\n}\n\nexport class ValueSetter extends Setter {\n  constructor(\n    value,\n\n    validateValue,\n\n    setValue,\n\n    priority,\n    subPriority,\n  ) {\n    super();\n    this.value = value;\n    this.validateValue = validateValue;\n    this.setValue = setValue;\n    this.priority = priority;\n    if (subPriority) {\n      this.subPriority = subPriority;\n    }\n  }\n\n  validate(date, options) {\n    return this.validateValue(date, this.value, options);\n  }\n\n  set(date, flags, options) {\n    return this.setValue(date, flags, this.value, options);\n  }\n}\n\nexport class DateTimezoneSetter extends Setter {\n  priority = TIMEZONE_UNIT_PRIORITY;\n  subPriority = -1;\n\n  constructor(context, reference) {\n    super();\n    this.context = context || ((date) => constructFrom(reference, date));\n  }\n\n  set(date, flags) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(date, transpose(date, this.context));\n  }\n}\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name transpose\n * @category Generic Helpers\n * @summary Transpose the date to the given constructor.\n *\n * @description\n * The function transposes the date to the given constructor. It helps you\n * to transpose the date in the system time zone to say `UTCDate` or any other\n * date extension.\n *\n * @typeParam InputDate - The input `Date` type derived from the passed argument.\n * @typeParam ResultDate - The result `Date` type derived from the passed constructor.\n *\n * @param date - The date to use values from\n * @param constructor - The date constructor to use\n *\n * @returns Date transposed to the given constructor\n *\n * @example\n * // Create July 10, 2022 00:00 in locale time zone\n * const date = new Date(2022, 6, 10)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0800 (Singapore Standard Time)'\n *\n * @example\n * // Transpose the date to July 10, 2022 00:00 in UTC\n * transpose(date, UTCDate)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0000 (Coordinated Universal Time)'\n */\nexport function transpose(date, constructor) {\n  const date_ = isConstructor(constructor)\n    ? new constructor(0)\n    : constructFrom(constructor, 0);\n  date_.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n  date_.setHours(\n    date.getHours(),\n    date.getMinutes(),\n    date.getSeconds(),\n    date.getMilliseconds(),\n  );\n  return date_;\n}\n\nfunction isConstructor(constructor) {\n  return (\n    typeof constructor === \"function\" &&\n    constructor.prototype?.constructor === constructor\n  );\n}\n\n// Fallback for modularized imports:\nexport default transpose;\n","import { ValueSetter } from \"./Setter.js\";\n\nexport class Parser {\n  run(dateString, token, match, options) {\n    const result = this.parse(dateString, token, match, options);\n    if (!result) {\n      return null;\n    }\n\n    return {\n      setter: new ValueSetter(\n        result.value,\n        this.validate,\n        this.set,\n        this.priority,\n        this.subPriority,\n      ),\n      rest: result.rest,\n    };\n  }\n\n  validate(_utcDate, _value, _options) {\n    return true;\n  }\n}\n","export const numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/, // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/, // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/, // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/, // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/, // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/, // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/, // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/, // 0 to 12\n  minute: /^[0-5]?\\d/, // 0 to 59\n  second: /^[0-5]?\\d/, // 0 to 59\n\n  singleDigit: /^\\d/, // 0 to 9\n  twoDigits: /^\\d{1,2}/, // 0 to 99\n  threeDigits: /^\\d{1,3}/, // 0 to 999\n  fourDigits: /^\\d{1,4}/, // 0 to 9999\n\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/, // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/, // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/, // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/, // 0 to 9999, -0 to -9999\n};\n\nexport const timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/,\n};\n","import {\n  millisecondsInHour,\n  millisecondsInMinute,\n  millisecondsInSecond,\n} from \"../../constants.js\";\n\nimport { numericPatterns } from \"./constants.js\";\n\nexport function mapValue(parseFnResult, mapFn) {\n  if (!parseFnResult) {\n    return parseFnResult;\n  }\n\n  return {\n    value: mapFn(parseFnResult.value),\n    rest: parseFnResult.rest,\n  };\n}\n\nexport function parseNumericPattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  return {\n    value: parseInt(matchResult[0], 10),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nexport function parseTimezonePattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  // Input is 'Z'\n  if (matchResult[0] === \"Z\") {\n    return {\n      value: 0,\n      rest: dateString.slice(1),\n    };\n  }\n\n  const sign = matchResult[1] === \"+\" ? 1 : -1;\n  const hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  const minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  const seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n\n  return {\n    value:\n      sign *\n      (hours * millisecondsInHour +\n        minutes * millisecondsInMinute +\n        seconds * millisecondsInSecond),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nexport function parseAnyDigitsSigned(dateString) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, dateString);\n}\n\nexport function parseNDigits(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, dateString);\n    default:\n      return parseNumericPattern(new RegExp(\"^\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nexport function parseNDigitsSigned(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, dateString);\n    default:\n      return parseNumericPattern(new RegExp(\"^-?\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nexport function dayPeriodEnumToHours(dayPeriod) {\n  switch (dayPeriod) {\n    case \"morning\":\n      return 4;\n    case \"evening\":\n      return 17;\n    case \"pm\":\n    case \"noon\":\n    case \"afternoon\":\n      return 12;\n    case \"am\":\n    case \"midnight\":\n    case \"night\":\n    default:\n      return 0;\n  }\n}\n\nexport function normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  const isCommonEra = currentYear > 0;\n  // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n  const absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n\n  let result;\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    const rangeEnd = absCurrentYear + 50;\n    const rangeEndCentury = Math.trunc(rangeEnd / 100) * 100;\n    const isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nexport function isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport {\n  isLeapYearIndex,\n  parseNDigits,\n  parseNumericPattern,\n} from \"../utils.js\";\n\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst DAYS_IN_MONTH_LEAP_YEAR = [\n  31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31,\n];\n\n// Day of the month\nexport class DateParser extends Parser {\n  priority = 90;\n  subPriority = 1;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"d\":\n        return parseNumericPattern(numericPatterns.date, dateString);\n      case \"do\":\n        return match.ordinalNumber(dateString, { unit: \"date\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    const month = date.getMonth();\n    if (isLeapYear) {\n      return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n    } else {\n      return value >= 1 && value <= DAYS_IN_MONTH[month];\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setDate(value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link addDays} function options.\n */\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n * @param options - An object with options\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount, options) {\n  const _date = toDate(date, options?.in);\n  if (isNaN(amount)) return constructFrom(options?.in || date, NaN);\n\n  // If 0 days, no-op to avoid changing times in the hour before end of DST\n  if (!amount) return _date;\n\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { addDays } from \"./addDays.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link setDay} function options.\n */\n\n/**\n * @name setDay\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param day - The day of the week of the new date\n * @param options - An object with options.\n *\n * @returns The new date with the day of the week set\n *\n * @example\n * // Set week day to Sunday, with the default weekStartsOn of Sunday:\n * const result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // Set week day to Sunday, with a weekStartsOn of Monday:\n * const result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport function setDay(date, day, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const date_ = toDate(date, options?.in);\n  const currentDay = date_.getDay();\n\n  const remainder = day % 7;\n  const dayIndex = (remainder + 7) % 7;\n\n  const delta = 7 - weekStartsOn;\n  const diff =\n    day < 0 || day > 6\n      ? day - ((currentDay + delta) % 7)\n      : ((dayIndex + delta) % 7) - ((currentDay + delta) % 7);\n  return addDays(date_, diff, options);\n}\n\n// Fallback for modularized imports:\nexport default setDay;\n","import { addDays } from \"./addDays.js\";\nimport { getISODay } from \"./getISODay.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link setISODay} function options.\n */\n\n/**\n * @name setISODay\n * @category Weekday Helpers\n * @summary Set the day of the ISO week to the given date.\n *\n * @description\n * Set the day of the ISO week to the given date.\n * ISO week starts with Monday.\n * 7 is the index of Sunday, 1 is the index of Monday, etc.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param day - The day of the ISO week of the new date\n * @param options - An object with options\n *\n * @returns The new date with the day of the ISO week set\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * const result = setISODay(new Date(2014, 8, 1), 7)\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport function setISODay(date, day, options) {\n  const date_ = toDate(date, options?.in);\n  const currentDay = getISODay(date_, options);\n  const diff = day - currentDay;\n  return addDays(date_, diff, options);\n}\n\n// Fallback for modularized imports:\nexport default setISODay;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISODay} function options.\n */\n\n/**\n * @name getISODay\n * @category Weekday Helpers\n * @summary Get the day of the ISO week of the given date.\n *\n * @description\n * Get the day of the ISO week of the given date,\n * which is 7 for Sunday, 1 for Monday etc.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The day of ISO week\n *\n * @example\n * // Which day of the ISO week is 26 February 2012?\n * const result = getISODay(new Date(2012, 1, 26))\n * //=> 7\n */\nexport function getISODay(date, options) {\n  const day = toDate(date, options?.in).getDay();\n  return day === 0 ? 7 : day;\n}\n\n// Fallback for modularized imports:\nexport default getISODay;\n","import { EraParser } from \"./parsers/EraParser.js\";\nimport { YearParser } from \"./parsers/YearParser.js\";\nimport { LocalWeekYearParser } from \"./parsers/LocalWeekYearParser.js\";\nimport { ISOWeekYearParser } from \"./parsers/ISOWeekYearParser.js\";\nimport { ExtendedYearParser } from \"./parsers/ExtendedYearParser.js\";\nimport { QuarterParser } from \"./parsers/QuarterParser.js\";\nimport { StandAloneQuarterParser } from \"./parsers/StandAloneQuarterParser.js\";\nimport { MonthParser } from \"./parsers/MonthParser.js\";\nimport { StandAloneMonthParser } from \"./parsers/StandAloneMonthParser.js\";\nimport { LocalWeekParser } from \"./parsers/LocalWeekParser.js\";\nimport { ISOWeekParser } from \"./parsers/ISOWeekParser.js\";\nimport { DateParser } from \"./parsers/DateParser.js\";\nimport { DayOfYearParser } from \"./parsers/DayOfYearParser.js\";\nimport { DayParser } from \"./parsers/DayParser.js\";\nimport { LocalDayParser } from \"./parsers/LocalDayParser.js\";\nimport { StandAloneLocalDayParser } from \"./parsers/StandAloneLocalDayParser.js\";\nimport { ISODayParser } from \"./parsers/ISODayParser.js\";\nimport { AMPMParser } from \"./parsers/AMPMParser.js\";\nimport { AMPMMidnightParser } from \"./parsers/AMPMMidnightParser.js\";\nimport { DayPeriodParser } from \"./parsers/DayPeriodParser.js\";\nimport { Hour1to12Parser } from \"./parsers/Hour1to12Parser.js\";\nimport { Hour0to23Parser } from \"./parsers/Hour0to23Parser.js\";\nimport { Hour0To11Parser } from \"./parsers/Hour0To11Parser.js\";\nimport { Hour1To24Parser } from \"./parsers/Hour1To24Parser.js\";\nimport { MinuteParser } from \"./parsers/MinuteParser.js\";\nimport { SecondParser } from \"./parsers/SecondParser.js\";\nimport { FractionOfSecondParser } from \"./parsers/FractionOfSecondParser.js\";\nimport { ISOTimezoneWithZParser } from \"./parsers/ISOTimezoneWithZParser.js\";\nimport { ISOTimezoneParser } from \"./parsers/ISOTimezoneParser.js\";\nimport { TimestampSecondsParser } from \"./parsers/TimestampSecondsParser.js\";\nimport { TimestampMillisecondsParser } from \"./parsers/TimestampMillisecondsParser.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\nexport const parsers = {\n  G: new EraParser(),\n  y: new YearParser(),\n  Y: new LocalWeekYearParser(),\n  R: new ISOWeekYearParser(),\n  u: new ExtendedYearParser(),\n  Q: new QuarterParser(),\n  q: new StandAloneQuarterParser(),\n  M: new MonthParser(),\n  L: new StandAloneMonthParser(),\n  w: new LocalWeekParser(),\n  I: new ISOWeekParser(),\n  d: new DateParser(),\n  D: new DayOfYearParser(),\n  E: new DayParser(),\n  e: new LocalDayParser(),\n  c: new StandAloneLocalDayParser(),\n  i: new ISODayParser(),\n  a: new AMPMParser(),\n  b: new AMPMMidnightParser(),\n  B: new DayPeriodParser(),\n  h: new Hour1to12Parser(),\n  H: new Hour0to23Parser(),\n  K: new Hour0To11Parser(),\n  k: new Hour1To24Parser(),\n  m: new MinuteParser(),\n  s: new SecondParser(),\n  S: new FractionOfSecondParser(),\n  X: new ISOTimezoneWithZParser(),\n  x: new ISOTimezoneParser(),\n  t: new TimestampSecondsParser(),\n  T: new TimestampMillisecondsParser(),\n};\n","import { Parser } from \"../Parser.js\";\n\nexport class EraParser extends Parser {\n  priority = 140;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return (\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n\n      // A, B\n      case \"GGGGG\":\n        return match.era(dateString, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return (\n          match.era(dateString, { width: \"wide\" }) ||\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n    }\n  }\n\n  set(date, flags, value) {\n    flags.era = value;\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"R\", \"u\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.js\";\n\n// From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n// | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n// |----------|-------|----|-------|-------|-------|\n// | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n// | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n// | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n// | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n// | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\nexport class YearParser extends Parser {\n  priority = 130;\n  incompatibleTokens = [\"Y\", \"R\", \"u\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n\n  parse(dateString, token, match) {\n    const valueCallback = (year) => ({\n      year,\n      isTwoDigitYear: token === \"yy\",\n    });\n\n    switch (token) {\n      case \"y\":\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n      case \"yo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"year\",\n          }),\n          valueCallback,\n        );\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value) {\n    const currentYear = date.getFullYear();\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = normalizeTwoDigitYear(\n        value.year,\n        currentYear,\n      );\n      date.setFullYear(normalizedTwoDigitYear, 0, 1);\n      date.setHours(0, 0, 0, 0);\n      return date;\n    }\n\n    const year =\n      !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}\n","import { getWeekYear } from \"../../../getWeekYear.js\";\n\nimport { startOfWeek } from \"../../../startOfWeek.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.js\";\n\n// Local week-numbering year\nexport class LocalWeekYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token, match) {\n    const valueCallback = (year) => ({\n      year,\n      isTwoDigitYear: token === \"YY\",\n    });\n\n    switch (token) {\n      case \"Y\":\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n      case \"Yo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"year\",\n          }),\n          valueCallback,\n        );\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value, options) {\n    const currentYear = getWeekYear(date, options);\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = normalizeTwoDigitYear(\n        value.year,\n        currentYear,\n      );\n      date.setFullYear(\n        normalizedTwoDigitYear,\n        0,\n        options.firstWeekContainsDate,\n      );\n      date.setHours(0, 0, 0, 0);\n      return startOfWeek(date, options);\n    }\n\n    const year =\n      !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, options.firstWeekContainsDate);\n    date.setHours(0, 0, 0, 0);\n    return startOfWeek(date, options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { startOfISOWeek } from \"../../../startOfISOWeek.js\";\nimport { constructFrom } from \"../../../constructFrom.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigitsSigned } from \"../utils.js\";\n\n// ISO week-numbering year\nexport class ISOWeekYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"R\") {\n      return parseNDigitsSigned(4, dateString);\n    }\n\n    return parseNDigitsSigned(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    const firstWeekOfYear = constructFrom(date, 0);\n    firstWeekOfYear.setFullYear(value, 0, 4);\n    firstWeekOfYear.setHours(0, 0, 0, 0);\n    return startOfISOWeek(firstWeekOfYear);\n  }\n\n  incompatibleTokens = [\n    \"G\",\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { parseNDigitsSigned } from \"../utils.js\";\n\nexport class ExtendedYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"u\") {\n      return parseNDigitsSigned(4, dateString);\n    }\n\n    return parseNDigitsSigned(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"G\", \"y\", \"Y\", \"R\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { parseNDigits } from \"../utils.js\";\n\nexport class QuarterParser extends Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n      case \"QQ\": // 01, 02, 03, 04\n        return parseNDigits(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { parseNDigits } from \"../utils.js\";\n\nexport class StandAloneQuarterParser extends Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n      case \"qq\": // 01, 02, 03, 04\n        return parseNDigits(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class MonthParser extends Parser {\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n\n  priority = 110;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => value - 1;\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"M\":\n        return mapValue(\n          parseNumericPattern(numericPatterns.month, dateString),\n          valueCallback,\n        );\n      // 01, 02, ..., 12\n      case \"MM\":\n        return mapValue(parseNDigits(2, dateString), valueCallback);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"month\",\n          }),\n          valueCallback,\n        );\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return (\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // J, F, ..., D\n      case \"MMMMM\":\n        return match.month(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return (\n          match.month(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(value, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class StandAloneMonthParser extends Parser {\n  priority = 110;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => value - 1;\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return mapValue(\n          parseNumericPattern(numericPatterns.month, dateString),\n          valueCallback,\n        );\n      // 01, 02, ..., 12\n      case \"LL\":\n        return mapValue(parseNDigits(2, dateString), valueCallback);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"month\",\n          }),\n          valueCallback,\n        );\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return (\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // J, F, ..., D\n      case \"LLLLL\":\n        return match.month(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return (\n          match.month(dateString, { width: \"wide\", context: \"standalone\" }) ||\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(value, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setWeek } from \"../../../setWeek.js\";\nimport { startOfWeek } from \"../../../startOfWeek.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\n// Local week of year\nexport class LocalWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"w\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n      case \"wo\":\n        return match.ordinalNumber(dateString, { unit: \"week\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value, options) {\n    return startOfWeek(setWeek(date, value, options), options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { getWeek } from \"./getWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link setWeek} function options.\n */\n\n/**\n * @name setWeek\n * @category Week Helpers\n * @summary Set the local week to the given date.\n *\n * @description\n * Set the local week to the given date, saving the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param week - The week of the new date\n * @param options - An object with options\n *\n * @returns The new date with the local week set\n *\n * @example\n * // Set the 1st week to 2 January 2005 with default options:\n * const result = setWeek(new Date(2005, 0, 2), 1)\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // Set the 1st week to 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January:\n * const result = setWeek(new Date(2005, 0, 2), 1, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sun Jan 4 2004 00:00:00\n */\nexport function setWeek(date, week, options) {\n  const date_ = toDate(date, options?.in);\n  const diff = getWeek(date_, options) - week;\n  date_.setDate(date_.getDate() - diff * 7);\n  return toDate(date_, options?.in);\n}\n\n// Fallback for modularized imports:\nexport default setWeek;\n","import { setISOWeek } from \"../../../setISOWeek.js\";\nimport { startOfISOWeek } from \"../../../startOfISOWeek.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\n// ISO week of year\nexport class ISOWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"I\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n      case \"Io\":\n        return match.ordinalNumber(dateString, { unit: \"week\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value) {\n    return startOfISOWeek(setISOWeek(date, value));\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { getISOWeek } from \"./getISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link setISOWeek} function options.\n */\n\n/**\n * @name setISOWeek\n * @category ISO Week Helpers\n * @summary Set the ISO week to the given date.\n *\n * @description\n * Set the ISO week to the given date, saving the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The `Date` type of the context function.\n *\n * @param date - The date to be changed\n * @param week - The ISO week of the new date\n * @param options - An object with options\n *\n * @returns The new date with the ISO week set\n *\n * @example\n * // Set the 53rd ISO week to 7 August 2004:\n * const result = setISOWeek(new Date(2004, 7, 7), 53)\n * //=> Sat Jan 01 2005 00:00:00\n */\nexport function setISOWeek(date, week, options) {\n  const _date = toDate(date, options?.in);\n  const diff = getISOWeek(_date, options) - week;\n  _date.setDate(_date.getDate() - diff * 7);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default setISOWeek;\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport {\n  isLeapYearIndex,\n  parseNDigits,\n  parseNumericPattern,\n} from \"../utils.js\";\n\nexport class DayOfYearParser extends Parser {\n  priority = 90;\n\n  subpriority = 1;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"D\":\n      case \"DD\":\n        return parseNumericPattern(numericPatterns.dayOfYear, dateString);\n      case \"Do\":\n        return match.ordinalNumber(dateString, { unit: \"date\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    if (isLeapYear) {\n      return value >= 1 && value <= 366;\n    } else {\n      return value >= 1 && value <= 365;\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(0, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"E\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setDay } from \"../../../setDay.js\";\nimport { Parser } from \"../Parser.js\";\n\n// Day of week\nexport class DayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // T\n      case \"EEEEE\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"D\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\n","import { setDay } from \"../../../setDay.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits } from \"../utils.js\";\n\n// Local day of week\nexport class LocalDayParser extends Parser {\n  priority = 90;\n  parse(dateString, token, match, options) {\n    const valueCallback = (value) => {\n      // We want here floor instead of trunc, so we get -7 for value 0 instead of 0\n      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n      return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;\n    };\n\n    switch (token) {\n      // 3\n      case \"e\":\n      case \"ee\": // 03\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      // 3rd\n      case \"eo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"day\",\n          }),\n          valueCallback,\n        );\n      // Tue\n      case \"eee\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // T\n      case \"eeeee\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // Tuesday\n      case \"eeee\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"i\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setDay } from \"../../../setDay.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits } from \"../utils.js\";\n\n// Stand-alone local day of week\nexport class StandAloneLocalDayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match, options) {\n    const valueCallback = (value) => {\n      // We want here floor instead of trunc, so we get -7 for value 0 instead of 0\n      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n      return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;\n    };\n\n    switch (token) {\n      // 3\n      case \"c\":\n      case \"cc\": // 03\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      // 3rd\n      case \"co\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"day\",\n          }),\n          valueCallback,\n        );\n      // Tue\n      case \"ccc\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // T\n      case \"ccccc\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // Tuesday\n      case \"cccc\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"standalone\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"i\",\n    \"e\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setISODay } from \"../../../setISODay.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits } from \"../utils.js\";\n\n// ISO day of week\nexport class ISODayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => {\n      if (value === 0) {\n        return 7;\n      }\n      return value;\n    };\n\n    switch (token) {\n      // 2\n      case \"i\":\n      case \"ii\": // 02\n        return parseNDigits(token.length, dateString);\n      // 2nd\n      case \"io\":\n        return match.ordinalNumber(dateString, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // T\n      case \"iiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          }),\n          valueCallback,\n        );\n      // Tu\n      case \"iiiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"short\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // Tuesday\n      case \"iiii\":\n      default:\n        return mapValue(\n          match.day(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"abbreviated\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 7;\n  }\n\n  set(date, _flags, value) {\n    date = setISODay(date, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { dayPeriodEnumToHours } from \"../utils.js\";\n\nexport class AMPMParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n      case \"aaa\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"aaaaa\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"b\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { dayPeriodEnumToHours } from \"../utils.js\";\n\nexport class AMPMMidnightParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n      case \"bbb\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"bbbbb\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { dayPeriodEnumToHours } from \"../utils.js\";\n\n// in the morning, in the afternoon, in the evening, at night\nexport class DayPeriodParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"BBBBB\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class Hour1to12Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"h\":\n        return parseNumericPattern(numericPatterns.hour12h, dateString);\n      case \"ho\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 12;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else if (!isPM && value === 12) {\n      date.setHours(0, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n\n  incompatibleTokens = [\"H\", \"K\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class Hour0to23Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"H\":\n        return parseNumericPattern(numericPatterns.hour23h, dateString);\n      case \"Ho\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 23;\n  }\n\n  set(date, _flags, value) {\n    date.setHours(value, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"h\", \"K\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class Hour0To11Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"K\":\n        return parseNumericPattern(numericPatterns.hour11h, dateString);\n      case \"Ko\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n\n  incompatibleTokens = [\"h\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class Hour1To24Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"k\":\n        return parseNumericPattern(numericPatterns.hour24h, dateString);\n      case \"ko\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 24;\n  }\n\n  set(date, _flags, value) {\n    const hours = value <= 24 ? value % 24 : value;\n    date.setHours(hours, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"h\", \"H\", \"K\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class MinuteParser extends Parser {\n  priority = 60;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"m\":\n        return parseNumericPattern(numericPatterns.minute, dateString);\n      case \"mo\":\n        return match.ordinalNumber(dateString, { unit: \"minute\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 59;\n  }\n\n  set(date, _flags, value) {\n    date.setMinutes(value, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class SecondParser extends Parser {\n  priority = 50;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"s\":\n        return parseNumericPattern(numericPatterns.second, dateString);\n      case \"so\":\n        return match.ordinalNumber(dateString, { unit: \"second\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 59;\n  }\n\n  set(date, _flags, value) {\n    date.setSeconds(value, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits } from \"../utils.js\";\n\nexport class FractionOfSecondParser extends Parser {\n  priority = 30;\n\n  parse(dateString, token) {\n    const valueCallback = (value) =>\n      Math.trunc(value * Math.pow(10, -token.length + 3));\n    return mapValue(parseNDigits(token.length, dateString), valueCallback);\n  }\n\n  set(date, _flags, value) {\n    date.setMilliseconds(value);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { constructFrom } from \"../../../constructFrom.js\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { timezonePatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseTimezonePattern } from \"../utils.js\";\n\n// Timezone (ISO-8601. +00:00 is `'Z'`)\nexport class ISOTimezoneWithZParser extends Parser {\n  priority = 10;\n\n  parse(dateString, token) {\n    switch (token) {\n      case \"X\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalMinutes,\n          dateString,\n        );\n      case \"XX\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"XXXX\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalSeconds,\n          dateString,\n        );\n      case \"XXXXX\":\n        return parseTimezonePattern(\n          timezonePatterns.extendedOptionalSeconds,\n          dateString,\n        );\n      case \"XXX\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(\n      date,\n      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value,\n    );\n  }\n\n  incompatibleTokens = [\"t\", \"T\", \"x\"];\n}\n","import { constructFrom } from \"../../../constructFrom.js\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { timezonePatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseTimezonePattern } from \"../utils.js\";\n\n// Timezone (ISO-8601)\nexport class ISOTimezoneParser extends Parser {\n  priority = 10;\n\n  parse(dateString, token) {\n    switch (token) {\n      case \"x\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalMinutes,\n          dateString,\n        );\n      case \"xx\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"xxxx\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalSeconds,\n          dateString,\n        );\n      case \"xxxxx\":\n        return parseTimezonePattern(\n          timezonePatterns.extendedOptionalSeconds,\n          dateString,\n        );\n      case \"xxx\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(\n      date,\n      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value,\n    );\n  }\n\n  incompatibleTokens = [\"t\", \"T\", \"X\"];\n}\n","import { constructFrom } from \"../../../constructFrom.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseAnyDigitsSigned } from \"../utils.js\";\n\nexport class TimestampSecondsParser extends Parser {\n  priority = 40;\n\n  parse(dateString) {\n    return parseAnyDigitsSigned(dateString);\n  }\n\n  set(date, _flags, value) {\n    return [constructFrom(date, value * 1000), { timestampIsSet: true }];\n  }\n\n  incompatibleTokens = \"*\";\n}\n","import { constructFrom } from \"../../../constructFrom.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseAnyDigitsSigned } from \"../utils.js\";\n\nexport class TimestampMillisecondsParser extends Parser {\n  priority = 20;\n\n  parse(dateString) {\n    return parseAnyDigitsSigned(dateString);\n  }\n\n  set(date, _flags, value) {\n    return [constructFrom(date, value), { timestampIsSet: true }];\n  }\n\n  incompatibleTokens = \"*\";\n}\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getDefaultOptions } from \"./getDefaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\nimport { DateTimezoneSetter } from \"./parse/_lib/Setter.js\";\nimport { parsers } from \"./parse/_lib/parsers.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { longFormatters, parsers };\n\n/**\n * The {@link parse} function options.\n */\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\n\nconst notWhitespaceRegExp = /\\S/;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 001, ..., 999                |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangeably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear](https://date-fns.org/docs/setISOWeekYear)\n *    and [setWeekYear](https://date-fns.org/docs/setWeekYear)).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 7. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param dateStr - The string to parse\n * @param formatStr - The string of tokens\n * @param referenceDate - defines values missing from the parsed dateString\n * @param options - An object with options.\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @returns The parsed date\n *\n * @throws `options.locale` must contain `match` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\nexport function parse(dateStr, formatStr, referenceDate, options) {\n  const invalidDate = () => constructFrom(options?.in || referenceDate, NaN);\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  if (!formatStr)\n    return dateStr ? invalidDate() : toDate(referenceDate, options?.in);\n\n  const subFnOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  // If timezone isn't specified, it will try to use the context or\n  // the reference date and fallback to the system time zone.\n  const setters = [new DateTimezoneSetter(options?.in, referenceDate)];\n\n  const tokens = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter in longFormatters) {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp);\n\n  const usedTokens = [];\n\n  for (let token of tokens) {\n    if (\n      !options?.useAdditionalWeekYearTokens &&\n      isProtectedWeekYearToken(token)\n    ) {\n      warnOrThrowProtectedError(token, formatStr, dateStr);\n    }\n    if (\n      !options?.useAdditionalDayOfYearTokens &&\n      isProtectedDayOfYearToken(token)\n    ) {\n      warnOrThrowProtectedError(token, formatStr, dateStr);\n    }\n\n    const firstCharacter = token[0];\n    const parser = parsers[firstCharacter];\n    if (parser) {\n      const { incompatibleTokens } = parser;\n      if (Array.isArray(incompatibleTokens)) {\n        const incompatibleToken = usedTokens.find(\n          (usedToken) =>\n            incompatibleTokens.includes(usedToken.token) ||\n            usedToken.token === firstCharacter,\n        );\n        if (incompatibleToken) {\n          throw new RangeError(\n            `The format string mustn't contain \\`${incompatibleToken.fullToken}\\` and \\`${token}\\` at the same time`,\n          );\n        }\n      } else if (parser.incompatibleTokens === \"*\" && usedTokens.length > 0) {\n        throw new RangeError(\n          `The format string mustn't contain \\`${token}\\` and any other token at the same time`,\n        );\n      }\n\n      usedTokens.push({ token: firstCharacter, fullToken: token });\n\n      const parseResult = parser.run(\n        dateStr,\n        token,\n        locale.match,\n        subFnOptions,\n      );\n\n      if (!parseResult) {\n        return invalidDate();\n      }\n\n      setters.push(parseResult.setter);\n\n      dateStr = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      // Replace two single quote characters with one single quote character\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      }\n\n      // Cut token from string, or, if string doesn't match the token, return Invalid Date\n      if (dateStr.indexOf(token) === 0) {\n        dateStr = dateStr.slice(token.length);\n      } else {\n        return invalidDate();\n      }\n    }\n  }\n\n  // Check if the remaining input contains something other than whitespace\n  if (dateStr.length > 0 && notWhitespaceRegExp.test(dateStr)) {\n    return invalidDate();\n  }\n\n  const uniquePrioritySetters = setters\n    .map((setter) => setter.priority)\n    .sort((a, b) => b - a)\n    .filter((priority, index, array) => array.indexOf(priority) === index)\n    .map((priority) =>\n      setters\n        .filter((setter) => setter.priority === priority)\n        .sort((a, b) => b.subPriority - a.subPriority),\n    )\n    .map((setterArray) => setterArray[0]);\n\n  let date = toDate(referenceDate, options?.in);\n\n  if (isNaN(+date)) return invalidDate();\n\n  const flags = {};\n  for (const setter of uniquePrioritySetters) {\n    if (!setter.validate(date, subFnOptions)) {\n      return invalidDate();\n    }\n\n    const result = setter.set(date, flags, subFnOptions);\n    // Result is tuple (date, flags)\n    if (Array.isArray(result)) {\n      date = result[0];\n      Object.assign(flags, result[1]);\n      // Result is date\n    } else {\n      date = result;\n    }\n  }\n\n  return date;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default parse;\n","import { getDefaultOptions as getInternalDefaultOptions } from \"./_lib/defaultOptions.js\";\n\n/**\n * @name getDefaultOptions\n * @category Common Helpers\n * @summary Get default options.\n * @pure false\n *\n * @description\n * Returns an object that contains defaults for\n * `options.locale`, `options.weekStartsOn` and `options.firstWeekContainsDate`\n * arguments for all functions.\n *\n * You can change these with [setDefaultOptions](https://date-fns.org/docs/setDefaultOptions).\n *\n * @returns The default options\n *\n * @example\n * const result = getDefaultOptions()\n * //=> {}\n *\n * @example\n * setDefaultOptions({ weekStarsOn: 1, firstWeekContainsDate: 4 })\n * const result = getDefaultOptions()\n * //=> { weekStarsOn: 1, firstWeekContainsDate: 4 }\n */\nexport function getDefaultOptions() {\n  return Object.assign({}, getInternalDefaultOptions());\n}\n\n// Fallback for modularized imports:\nexport default getDefaultOptions;\n","import getActiveProject from \"./getActiveProject\";\nimport { parse, format } from 'date-fns';\n\nconst addTodoDialog = document.querySelector('.add-todo-dialog');\nconst addTodoForm = document.querySelector('.add-todo-dialog > form');\n\nexport default function editTodoHandler(editTodoBtn, todo) {\n    editTodoBtn.addEventListener('click', () => {\n\t\taddTodoForm.elements.title.value = todo.title;\n\t\taddTodoForm.elements.description.value = todo.description;\n\t\taddTodoForm.elements.priority.value = todo.priority;\n\t\taddTodoForm.elements.date.value = format(parse(todo.dueDate, \"dd/MM/yyyy\", new Date()), \"yyyy-MM-dd\");\n        addTodoDialog.showModal();\n\t\tconst activeProject = getActiveProject();\n\t\tactiveProject.delete(todo.title);\t\n    });\n} ","import './dom.css'\nimport getActiveProject from '../modules/getActiveProject';\nimport setPriorityStyle from './setPriorityStyle';\nimport todoDescriptionToggle from './todoDescriptionToggle';\nimport editTodoHandler from '../modules/editTodoHandler';\n\nconst mainContainer = document.querySelector('.main-container');\nconst mainContainerHeading = document.querySelector('.head > h3')\nconst todoContainer = document.createElement('div');\ntodoContainer.classList.add('todo-container');\nmainContainer.appendChild(todoContainer);\n\nexport default function renderMainContainer() {\n\ttodoContainer.innerHTML = '';\n\tconst project = getActiveProject();\n\n\tmainContainerHeading.innerHTML = `\n\t\t${project.title}\n\t`;\n\tproject.projectTodos.forEach(todoTask => {\n\t\tconst todo = document.createElement('div');\n\t\tconst todoTitle = document.createElement('div');\n\t\tconst todoDueDate = document.createElement('div');\n\n\t\tconst checkbox = document.createElement('input');\n\t\tcheckbox.setAttribute(\"type\", \"checkbox\");\n\t\ttodo.appendChild(checkbox);\n\n\t\ttodo.classList.add('todo');\n\t\ttodoTitle.classList.add('todo-title');\n\t\ttodoDueDate.classList.add('todo-due-title');\n\t\ttodoTitle.innerHTML = `\n\t\t\t${todoTask.title}\n\t\t`;\n\t\ttodoDueDate.innerHTML = `\n\t\t\t${todoTask.dueDate}\n\t\t`;\n\t\ttodo.appendChild(todoTitle);\n\t\ttodo.appendChild(todoDueDate);\n\n\t\tconst removeTodoBtn = document.createElement('button');\n\t\tremoveTodoBtn.innerHTML = 'X';\n\t\ttodo.appendChild(removeTodoBtn);\n\n\t\tconst moreTodoBtn = document.createElement('button');\n\t\tmoreTodoBtn.innerHTML = 'more';\n\t\ttodo.appendChild(moreTodoBtn);\n\n\t\tconst editTodoBtn = document.createElement('button');\n\t\teditTodoBtn.innerHTML = 'edit';\n\t\teditTodoHandler(editTodoBtn, todoTask);\n\t\ttodo.appendChild(editTodoBtn);\n\n\t\tconst descriptionPara = document.createElement('p');\n\t\tdescriptionPara.classList.add('todo-description');\n\t\tdescriptionPara.classList.add('hidden-description');\n\t\tdescriptionPara.innerText = todoTask.description;\n\t\ttodoDescriptionToggle(moreTodoBtn, descriptionPara);\n\t\ttodo.appendChild(descriptionPara);\n\n\n\t\ttodoContainer.appendChild(todo);\n\t\tsetPriorityStyle(todo, todoTask.priority);\n\t});\n}\n","export default function todoDescriptionToggle(moreTodoBtn, descriptionPara) {\n\tmoreTodoBtn.addEventListener('click', () => {\n\t\tconsole.log('dac');\n\t\tif(descriptionPara.classList.contains('hidden-description')) {\n\t\t\tdescriptionPara.classList.remove('hidden-description');\n\t\t}\n\t\telse {\n\t\t\tdescriptionPara.classList.add('hidden-description');\n\t\t}\n\t});\n}","export default function setPriorityStyle(todo, priority) {\n\ttodo.classList.add(\"priority\" + '-' + priority);\n}","import allProjectsArray from '../index'\n\nexport default function updateLocalStorage() {\n\tlocalStorage.setItem(\"allProjectsArray\", JSON.stringify(allProjectsArray));\n}","import getActiveProject from \"./getActiveProject\";\nimport renderMainContainer from \"../dom/mainContainer\";\nimport updateLocalStorage from \"./updateLocalStorage\";\n\nexport function manageTodoCheckboxes() {\n    const todoCheckboxes = document.querySelectorAll('.todo > input');\n\n    todoCheckboxes.forEach((checkbox) => {\n        checkbox.addEventListener('change', function () {\n            const todoTitle = this.closest('.todo').querySelector('.todo-title');\n\n            if (this.checked) {\n                todoTitle.style.textDecoration = 'line-through';\n            } else {\n                todoTitle.style.textDecoration = 'none';\n            }\n        });\n    });\n}\n\nexport function manageTodoDeletion() {\n    const deleteButtons = document.querySelectorAll('.todo button:first-of-type');\n\n    deleteButtons.forEach((button) => {\n        button.addEventListener('click', function () {\n            const todoContainer = this.closest('.todo');\n            const todoTitle = todoContainer.querySelector('.todo-title').innerText;\n\n\t\t\tconst activeProject = getActiveProject();\n\t\t\tactiveProject.delete(todoTitle);\n\t\t\trenderMainContainer();\n\t\t\tmanageTodoCheckboxes();\n        \tmanageTodoDeletion();\n            updateLocalStorage();\n        });\n    });\n}\n","import {\n  millisecondsInHour,\n  millisecondsInMinute,\n} from \"./constants.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link parseISO} function options.\n */\n\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n * @param options - An object with options\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\nexport function parseISO(argument, options) {\n  const invalidDate = () => constructFrom(options?.in, NaN);\n\n  const additionalDigits = options?.additionalDigits ?? 2;\n  const dateStrings = splitDateString(argument);\n\n  let date;\n  if (dateStrings.date) {\n    const parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (!date || isNaN(+date)) return invalidDate();\n\n  const timestamp = +date;\n  let time = 0;\n  let offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n    if (isNaN(time)) return invalidDate();\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n    if (isNaN(offset)) return invalidDate();\n  } else {\n    const tmpDate = new Date(timestamp + time);\n    const result = toDate(0, options?.in);\n    result.setFullYear(\n      tmpDate.getUTCFullYear(),\n      tmpDate.getUTCMonth(),\n      tmpDate.getUTCDate(),\n    );\n    result.setHours(\n      tmpDate.getUTCHours(),\n      tmpDate.getUTCMinutes(),\n      tmpDate.getUTCSeconds(),\n      tmpDate.getUTCMilliseconds(),\n    );\n    return result;\n  }\n\n  return toDate(timestamp + time + offset, options?.in);\n}\n\nconst patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/,\n};\n\nconst dateRegex =\n  /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nconst timeRegex =\n  /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nconst timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n\nfunction splitDateString(dateString) {\n  const dateStrings = {};\n  const array = dateString.split(patterns.dateTimeDelimiter);\n  let timeString;\n\n  // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(\n        dateStrings.date.length,\n        dateString.length,\n      );\n    }\n  }\n\n  if (timeString) {\n    const token = patterns.timezone.exec(timeString);\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], \"\");\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  const regex = new RegExp(\n    \"^(?:(\\\\d{4}|[+-]\\\\d{\" +\n      (4 + additionalDigits) +\n      \"})|(\\\\d{2}|[+-]\\\\d{\" +\n      (2 + additionalDigits) +\n      \"})$)\",\n  );\n\n  const captures = dateString.match(regex);\n  // Invalid ISO-formatted year\n  if (!captures) return { year: NaN, restDateString: \"\" };\n\n  const year = captures[1] ? parseInt(captures[1]) : null;\n  const century = captures[2] ? parseInt(captures[2]) : null;\n\n  // either year or century is null, not both\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length),\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n\n  const captures = dateString.match(dateRegex);\n  // Invalid ISO-formatted string\n  if (!captures) return new Date(NaN);\n\n  const isWeekDate = !!captures[4];\n  const dayOfYear = parseDateUnit(captures[1]);\n  const month = parseDateUnit(captures[2]) - 1;\n  const day = parseDateUnit(captures[3]);\n  const week = parseDateUnit(captures[4]);\n  const dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    const date = new Date(0);\n    if (\n      !validateDate(year, month, day) ||\n      !validateDayOfYearDate(year, dayOfYear)\n    ) {\n      return new Date(NaN);\n    }\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  const captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  const hours = parseTimeUnit(captures[1]);\n  const minutes = parseTimeUnit(captures[2]);\n  const seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return (\n    hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000\n  );\n}\n\nfunction parseTimeUnit(value) {\n  return (value && parseFloat(value.replace(\",\", \".\"))) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === \"Z\") return 0;\n\n  const captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n\n  const sign = captures[1] === \"+\" ? -1 : 1;\n  const hours = parseInt(captures[2]);\n  const minutes = (captures[3] && parseInt(captures[3])) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  const date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  const fourthOfJanuaryDay = date.getUTCDay() || 7;\n  const diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\n\n// Validation functions\n\n// February is null to handle the leap year (using ||)\nconst daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n\nfunction validateDate(year, month, date) {\n  return (\n    month >= 0 &&\n    month <= 11 &&\n    date >= 1 &&\n    date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28))\n  );\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return (\n    seconds >= 0 &&\n    seconds < 60 &&\n    minutes >= 0 &&\n    minutes < 60 &&\n    hours >= 0 &&\n    hours < 25\n  );\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}\n\n// Fallback for modularized imports:\nexport default parseISO;\n","import createTodo from './createTodo';\nimport renderMainContainer from '../dom/mainContainer';\nimport getActiveProject from './getActiveProject';\nimport { manageTodoCheckboxes, manageTodoDeletion } from './todoManager';\nimport updateLocalStorage from './updateLocalStorage';\nimport { parseISO, format } from 'date-fns';\n\nconst addTodoBtn = document.querySelector('.add-todo-btn');\nconst addTodoDialog = document.querySelector('.add-todo-dialog');\nconst addTodoForm = document.querySelector('.add-todo-dialog > form');\n\nlet isAddTodoListenerAttached = false;\n\nexport default function addTodoToProject () {\n\n    if(!isAddTodoListenerAttached) {\n\n        addTodoBtn.addEventListener('click', () => {\n            addTodoDialog.showModal();\n        });\n\n        addTodoForm.addEventListener('submit', (e) => {\n            e.preventDefault();\n\n            const title = e.target.title.value;\n            const description = e.target.description.value;\n            const priority = e.target.priority.value;\n            const date = format(parseISO(e.target.date.value), \"dd/MM/yyyy\");\n\n            const newTodo = new createTodo(title, description, date, priority);\n            const activeProject = getActiveProject();\n            activeProject.addTodo(newTodo);\n            updateLocalStorage();\n\n            renderMainContainer();\n            manageTodoCheckboxes();\n            manageTodoDeletion();\n\n            addTodoForm.reset();\n            addTodoDialog.close();\n        });\n\n        isAddTodoListenerAttached = true;\n    }\n}\n","import allProjectsArray from '../index'\nimport renderMainContainer from '../dom/mainContainer';\nimport { manageTodoCheckboxes, manageTodoDeletion } from './todoManager';\nimport addTodoToProject from './addTodoToProject';\n\nexport default function handleProjectClicks() {\n\tconst menuProjects = document.querySelectorAll('.todo-holder');\n\n\tmenuProjects.forEach((project) => {\n\t\tproject.addEventListener('click', () => {\n\t\t\t\n\t\t\tconst projectName = project.innerHTML;\n\n\t\t\tallProjectsArray.forEach((proj) => {\n\t\t\t\tproj.active = proj.title === projectName;\n\t\t\t});\n\n\t\t\trenderMainContainer();\n\t\t\tmanageTodoCheckboxes();\n\t\t\tmanageTodoDeletion();\n\t\t\taddTodoToProject();\n\t\t});\n\t});\n}\n","import allProjectsArray from \"..\";\n\n\nexport default function renderNewProject() {\n\tconst newProjectsContainer = document.querySelector('.new-projects-container');\n\n\tnewProjectsContainer.innerHTML = '';\n\n\tallProjectsArray.slice(3).forEach((newProject) => {\n\t\tconst newProjectDiv = document.createElement('div');\n\t\tnewProjectDiv.classList.add('todo-holder');\n\t\tnewProjectDiv.innerText = newProject.title;\n\t\tnewProjectsContainer.appendChild(newProjectDiv);\n\t});\n}","import './dom.css'\n\nconst footer = document.querySelector('footer');\n\nexport default function addFooter() {\n\tfooter.innerHTML = `\n\t\tmade with ❤️\n\t\t${new Date().getFullYear()}\n\t`;\n}","import './dom.css'\n\nconst header = document.querySelector('header');\n\nexport default function addFooter() {\n\theader.innerHTML = `\n\t\t<h1>\n\t\t\tTickItOff\n\t\t</h1>\n\t`;\n}","import './dom.css'\n\nconst menu = document.querySelector('.menu');\nconst defaultMenu = document.createElement('div');\nconst projectsMenu = document.createElement('div');\n\ndefaultMenu.classList.add('default-menu');\nprojectsMenu.classList.add('projects-menu');\n\nprojectsMenu.innerHTML = `\n\t<div>\n\t\t<h3>Projects</h3>\n\t\t<button class = 'add-project-btn'>+</button>\n\t</div>\n\t<div class = 'new-projects-container'>\n\t</div>\n`;\n\nconst inbox = document.createElement('div');\nconst today = document.createElement('div');\nconst thisWeek = document.createElement('div');\n\ninbox.innerHTML = 'Inbox'\ntoday.innerHTML = 'Today'\nthisWeek.innerHTML = 'This Week'\ninbox.classList.add('todo-holder')\ntoday.classList.add('todo-holder')\nthisWeek.classList.add('todo-holder')\n\ndefaultMenu.appendChild(inbox);\ndefaultMenu.appendChild(today);\ndefaultMenu.appendChild(thisWeek);\n\nexport default function renderMenu() {\n\tmenu.appendChild(defaultMenu);\n\tmenu.appendChild(projectsMenu);\n}","import './styles.css';\n\nimport initProjects from './modules/initProjects';\nimport handleProjectClicks from './modules/projectClickHandler';\nimport handleProjectDialog from './modules/projectDialogHandler';\nimport addTodoToProject from './modules/addTodoToProject';\nimport { manageTodoCheckboxes, manageTodoDeletion } from './modules/todoManager';\nimport renderFooter from './dom/footer';\nimport renderHeader from './dom/header';\nimport renderMenu from './dom/menu';\nimport renderMainContainer from './dom/mainContainer';\nimport renderNewProject from './dom/renderNewProjects';\n\n\nconst allProjectsArray = initProjects();\nexport default allProjectsArray;\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\t// Render UI\n\trenderFooter();\n\trenderHeader();\n\trenderMenu();\n\trenderMainContainer();\n\trenderNewProject();\n\n\t// Setup handlers\n\tmanageTodoCheckboxes();\n\tmanageTodoDeletion();\n\taddTodoToProject();\n\thandleProjectClicks();\n\thandleProjectDialog();\n});\n\n\n\n","import createProject from './createProject';\nimport createTodo from './createTodo';\nimport { format } from 'date-fns';\n\n\nexport default function initProjects() {\n\tlet allProjectsArray = JSON.parse(localStorage.getItem('allProjectsArray'));\n\n\tif(allProjectsArray === null) {\n\t\tallProjectsArray = [];\n\t\tconst inbox = new createProject('Inbox');\n\t\tconst today = new createProject('Today');\n\t\tconst thisWeek = new createProject('This Week');\n\n\t\tallProjectsArray.push(inbox, today, thisWeek);\n\n\t\tconst todo1 = new createTodo('Fix bugs in user authentication system', 'do it asap', format(new Date(), \"dd/MM/yyyy\"), 'low', false);\n\t\tconst todo2 = new createTodo('Write a summary of annual report', 'do it', format(new Date(), \"dd/MM/yyyy\"), 'medium', false);\n\t\tconst todo3 = new createTodo('Drink water', 'do it everyday', format(new Date(), \"dd/MM/yyyy\"), 'high', false);\n\n\t\tinbox.addTodo(todo1);\n\t\tinbox.addTodo(todo2);\n\t\tinbox.addTodo(todo3);\n\n\t\ttoday.addTodo(todo1);\n\t\ttoday.addTodo(todo2);\n\t\tthisWeek.addTodo(todo1);\n\n\t\tinbox.active = true;\n\n\t\tlocalStorage.setItem('allProjectsArray', JSON.stringify(allProjectsArray));\n\t}\n\n\telse {\n\t\tallProjectsArray = allProjectsArray.map(unitProjectData => {\n\t\t\tconst projectInstance = new createProject(unitProjectData.title);\n\n\t\t\tprojectInstance.projectTodos = unitProjectData.projectTodos.map(todoData => {\n\t\t\t\treturn new createTodo(\n\t\t\t\t\ttodoData.title,\n\t\t\t\t\ttodoData.description,\n\t\t\t\t\ttodoData.dueDate,\n\t\t\t\t\ttodoData.priority,\n\t\t\t\t\ttodoData.taskDone,\n\t\t\t\t);\n\t\t\t});\n\t\t\tprojectInstance.active = unitProjectData.active;\n\t\t\treturn projectInstance;\n\t\t});\n\t}\n\treturn allProjectsArray;\n}","import createProject from './createProject';\nimport handleProjectClicks from './projectClickHandler';\nimport allProjectsArray from '../index';\nimport renderNewProject from '../dom/renderNewProjects';\nimport updateLocalStorage from './updateLocalStorage';\n\nexport default function handleProjectDialog() {\n\tconst addProjectBtn = document.querySelector('.add-project-btn');\n\tconst addProjectDialog = document.querySelector('.add-project-dialog');\n\tconst addProjectForm = document.querySelector('.add-project-dialog form');\n\n\taddProjectBtn.addEventListener('click', () => {\n\t\taddProjectDialog.showModal();\n\t});\n\n\taddProjectForm.addEventListener('submit', (e) => {\n\t\te.preventDefault();\n\t\tconst title = e.target.project_title.value;\n\t\tconst newProject = new createProject(title);\n\t\tallProjectsArray.push(newProject);\n\t\taddProjectForm.reset();\n\t\taddProjectDialog.close();\n\t\tupdateLocalStorage();\n\t\trenderNewProject();\n\t\thandleProjectClicks();\n\t});\n}\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","nc","locals","project","constructor","title","projectTodos","active","addTodo","todo","todoTitle","indexOfTodo","findIndex","todos","description","dueDate","priority","taskDone","toggleTaskDone","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","width","String","defaultWidth","formats","formatLong","date","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","value","valuesArray","context","formattingValues","defaultFormattingWidth","values","argumentCallback","localize","ordinalNumber","dirtyNumber","_options","number","Number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","Array","isArray","array","test","object","findKey","valueCallback","rest","slice","parsePattern","parseInt","parseResult","any","enUS","code","formatDistance","token","tokenValue","replace","addSuffix","comparison","formatRelative","_date","_baseDate","weekStartsOn","firstWeekContainsDate","defaultOptions","getDefaultOptions","Math","pow","millisecondsInWeek","millisecondsInMinute","millisecondsInHour","constructFromSymbol","Symbol","for","constructFrom","Date","toDate","argument","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","startOfDay","in","setHours","getDayOfYear","laterDate","earlierDate","laterDate_","earlierDate_","dates","normalize","bind","find","normalizeDates","laterStartOfDay","earlierStartOfDay","laterTimestamp","earlierTimestamp","round","differenceInCalendarDays","date_","setFullYear","startOfYear","startOfWeek","locale","getDay","diff","setDate","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTime","getISOWeek","fourthOfJanuary","startOfISOWeekYear","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","getWeek","firstWeek","startOfWeekYear","addLeadingZeros","targetLength","abs","padStart","lightFormatters","y","signedYear","M","dayPeriodEnumValue","toUpperCase","h","H","m","s","S","numberOfDigits","milliseconds","trunc","formatters","G","unit","Y","signedWeekYear","weekYear","R","u","Q","ceil","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","localDayOfWeek","c","isoDayOfWeek","toLowerCase","b","hours","B","K","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","T","offset","delimiter","sign","absOffset","minutes","dateLongFormatter","pattern","timeLongFormatter","longFormatters","p","P","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isProtectedDayOfYearToken","isProtectedWeekYearToken","warnOrThrowProtectedError","format","input","_message","subject","message","console","warn","includes","RangeError","isValid","isNaN","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","formatStr","originalDate","parts","substring","firstCharacter","longFormatter","isToken","cleanEscapedString","preprocessor","formatterOptions","part","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","formatter","matched","getActiveProject","Setter","subPriority","validate","_utcDate","ValueSetter","validateValue","setValue","super","set","flags","DateTimezoneSetter","reference","timestampIsSet","isConstructor","transpose","Parser","run","dateString","parse","setter","_value","numericPatterns","timezonePatterns","mapValue","parseFnResult","mapFn","parseNumericPattern","parseTimezonePattern","seconds","parseAnyDigitsSigned","parseNDigits","RegExp","parseNDigitsSigned","dayPeriodEnumToHours","normalizeTwoDigitYear","twoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","isLeapYearIndex","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","addDays","amount","NaN","setDay","currentDay","delta","setISODay","getISODay","parsers","incompatibleTokens","isTwoDigitYear","normalizedTwoDigitYear","_flags","firstWeekOfYear","setMonth","setWeek","setISOWeek","isLeapYear","subpriority","wholeWeekDays","floor","isPM","setMinutes","setSeconds","setMilliseconds","notWhitespaceRegExp","dateStr","referenceDate","invalidDate","assign","subFnOptions","setters","tokens","usedTokens","parser","incompatibleToken","usedToken","fullToken","indexOf","uniquePrioritySetters","sort","filter","setterArray","addTodoDialog","addTodoForm","mainContainer","mainContainerHeading","todoContainer","renderMainContainer","innerHTML","forEach","todoTask","todoDueDate","checkbox","classList","add","removeTodoBtn","moreTodoBtn","editTodoBtn","addEventListener","elements","showModal","delete","editTodoHandler","descriptionPara","innerText","log","contains","todoDescriptionToggle","setPriorityStyle","updateLocalStorage","localStorage","setItem","manageTodoCheckboxes","querySelectorAll","closest","checked","textDecoration","manageTodoDeletion","button","patterns","dateTimeDelimiter","timeZoneDelimiter","timezone","dateRegex","timeRegex","timezoneRegex","parseDateUnit","parseTimeUnit","parseFloat","daysInMonths","addTodoBtn","isAddTodoListenerAttached","addTodoToProject","preventDefault","additionalDigits","dateStrings","split","timeString","substr","exec","splitDateString","parseYearResult","regex","captures","restDateString","century","parseYear","isWeekDate","_year","validateWeekDate","isoWeekYear","getUTCDay","setUTCDate","getUTCDate","dayOfISOWeekYear","validateDate","validateDayOfYearDate","max","parseDate","timestamp","validateTime","parseTime","tmpDate","getUTCFullYear","getUTCMonth","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","timezoneString","_hours","validateTimezone","parseTimezone","parseISO","newTodo","reset","close","handleProjectClicks","projectName","proj","renderNewProject","newProjectsContainer","newProject","newProjectDiv","footer","header","menu","defaultMenu","projectsMenu","inbox","thisWeek","allProjectsArray","getItem","todo1","todo2","todo3","unitProjectData","projectInstance","todoData","initProjects","addProjectBtn","addProjectDialog","addProjectForm","project_title","handleProjectDialog"],"sourceRoot":""}